generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plan {
    FREE
    PRO
}

enum DeploymentStatus {
    PENDING
    IN_PROGRESS
    SUCCESS
    FAILED
}

model User {
    id         String  @id @default(cuid())
    externalId String? @unique

    quotaLimit Int
    plan       Plan @default(FREE)

    email    String? @unique
    username String? @unique 
    name     String?
    avatar   String?
    apiKey   String @unique @default(cuid())
    github_installation_id Int?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Projects Project[]
}

model EnvironmentVariables {
    id        String   @id @default(cuid())
    key       String
    value     String
    project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
    projectId String   // Foreign key for the project relationship

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Project {
    id             String   @id @default(cuid())
    name           String
    user           User     @relation(fields: [userId], references: [id])
    userId         String   // Foreign key for the user relationship
    gitHubRepoURL  String 
    slugIdentifier String   @unique
    rootDir        String
    envVars        EnvironmentVariables[]
    branch         String
    token          String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Deployments Deployment[]
}

model Deployment {
    id          String   @id @default(cuid())
    project     Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
    projectId   String   // Foreign key for the project relationship
    status      DeploymentStatus @default(PENDING)
    containerId String?
    Logs        Log[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Log {
    id           String     @id @default(cuid())
    deployment   Deployment @relation(fields: [deploymentId], references: [id])
    deploymentId String      // Foreign key for the deployment relationship
    message      String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}